# Dependencies
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Production build
build/
dist/

# Environment variables
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# Logs
logs
*.log

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/

# nyc test coverage
.nyc_output

# Dependency directories
node_modules/
jspm_packages/

# Optional npm cache directory
.npm

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# next.js build output
.next

# nuxt.js build output
.nuxt

# vuepress build output
.vuepress/dist

# Serverless directories
.serverless

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# React specific
# See https://facebook.github.io/create-react-app/docs/deployment for more information about deployment.

# You can add the build folder to your .gitignore. However, be aware that the following files would still be tracked:
# - public/favicon.ico
# - public/index.html
# - public/manifest.json
# You can have the full effect of uncommenting the following line.
# https://facebook.github.io/create-react-app/docs/advanced#github-pages-deployment
# /build

# We recommend that you do not commit your application's build artifacts to version control.
# Instead, include the build step in your deployment process. See the deployment section of the user guide for more information: https://facebook.github.io/create-react-app/docs/deployment

# When you add a file to the public folder, webpack will not process that file. Instead, webpack will copy that file to the build folder. To reference that file in the HTML, you need to use a special variable that webpack provides: the `PUBLIC_URL` environment variable. You can see this in the public/index.html file and use it like this: `<link rel="icon" href="%PUBLIC_URL%/favicon.ico" />`. In the JavaScript code, you can use `process.env.PUBLIC_URL` for similar purposes: `render() { return <img src={process.env.PUBLIC_URL + '/img/logo.png'} />; }`. Keep in mind the downsides of this approach:
# - None of the files in the public folder get post-processed or minified.
# - You must use PUBLIC_URL for it to work, but this makes it harder to move your app to a different domain name.

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# IDE files
.vscode/
.idea/
*.swp
*.swo
*~

# Temporary files
*.tmp
*.temp

# ESLint cache
.eslintcache

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env 